version: '3.3'

networks:
  app-network:
    driver: bridge

services:
  mysql:
    image: mysql
    container_name: mysql
    restart: always
    environment:
      MYSQL_DATABASE: 'restscreen_dev'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - mysql-db:/var/lib/mysql
    networks:
      - app-network
  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - /path/to/local/d–∞ta:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=1
    networks:
      - app-network
  back-end:
    build: ./Back-End
    container_name: back-end
    command: npm run start
    env_file: ./Back-End/.env
    ports:
      - "5454:5454"
    volumes:
      - ./Back-End:/home/node/back-end
      - /home/node/back-end/node_modules
    networks:
      - app-network
    depends_on:
      - mysql
  front-end:
    build: ./Front-End
    container_name: front-end
    environment:
      - CHOKIDAR_USEPOLLING=true
    env_file: ./Front-End/.env
    command: npm run start-prod
    ports:
      - "8080:8080"
    volumes:
      - ./Front-End:/home/node/front-end
      - /home/node/front-end/node_modules
    networks:
      - app-network
volumes:
  mysql-db: